{
    "openapi": "3.0.1",
    "info": {
      "title": "Deals",
      "version": "v3"
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Basic"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/properties/{objectType}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Get the list of all groups that are available on any hubspot object.",
          "description": "Get the list of all properties that are available on any hubspot object.",
          "operationId": "getProperties",
          "x-speakeasy-mcp": {
            "scopes": ["read"],
            "description": "Get the list of all properties that are available on any hubspot object. Object types can be `contacts`, `companies`, or `deals`."
          },
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "description": "The type of the object for which to retrieve properties.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string",
                "enum": ["contacts", "companies", "deals"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.companies.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/{companyId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Retrieve a company",
          "description": "Retrieve a company by its ID (`companyId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter.",
          "operationId": "getCompany",
          "x-speakeasy-mcp": {
            "scopes": ["read"],
            "description": "Retrieve a company by its ID (`companyId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter."
          },
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "description": "The ID of the company",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.companies.read"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update a company",
          "description": "Update a company by ID (`companyId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
          "x-speakeasy-mcp": {
            "scopes": ["write"],
            "description": "Update a company by ID (`companyId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string."
          },
          "operationId": "updateCompany",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "summary": "Search for companies",
          "description": "Search for companies by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
          "x-speakeasy-mcp": {
            "scopes": ["read"],
            "description": "Search for companies by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request)."
          },
          "operationId": "searchCompanies",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.companies.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/{contactId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Retrieve a contact",
          "description": "Retrieve a contact by its ID (`contactId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter.",
          "x-speakeasy-mcp": {
            "scopes": ["read"],
            "description": "Retrieve a contact by its ID (`contactId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter."
          },
          "operationId": "getContact",
          "parameters": [
            {
              "name": "contactId",
              "in": "path",
              "description": "The ID of the contact to retrieve.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.contacts.read"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update a contact",
          "description": "Update a contact by ID (`contactId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
          "x-speakeasy-mcp": {
            "scopes": ["write"],
            "description": "Update a contact by ID (`contactId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string."
          },
          "operationId": "updateContact",
          "parameters": [
            {
              "name": "contactId",
              "in": "path",
              "description": "The ID of the contact to update.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts": {
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create a contact",
          "description": "Create a single contact. Include a `properties` object to define [property values](https://developers.hubspot.com/docs/guides/api/crm/properties) for the contact, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
          "x-speakeasy-mcp": {
            "scopes": ["write"],
            "description": "Create a single contact. Include a `properties` object to define [property values](https://developers.hubspot.com/docs/guides/api/crm/properties) for the contact, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records."
          },
          "operationId": "createContact",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "summary": "Search for contacts",
          "description": "Search for contacts by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
          "x-speakeasy-mcp": {
            "scopes": ["read"],
            "description": "Search for contacts by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request). When doing a search you must make a request with filterGroups.filter[], this must contain propertyName, operator, and value."
          },
          "operationId": "searchContacts",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.contacts.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/{dealId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read a Deal Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "getDeal",
          "x-speakeasy-mcp": {
            "scopes": ["read"],
            "description": "Read a Deal Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param."
          },
          "parameters": [
            {
              "name": "dealId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.deals.read"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "updateDeal",
          "x-speakeasy-mcp": {
            "scopes": ["write"],
            "description": "Perform a partial update of an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string."
          },
          "parameters": [
            {
              "name": "dealId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals": {
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a deal with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard deals is provided.",
          "operationId": "createDeal",
          "x-speakeasy-mcp": {
            "scopes": ["write"],
            "description": "Create a deal with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard deals is provided."
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "searchDeals",
          "x-speakeasy-mcp": {
            "description":  "Search for deals by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
            "scopes": ["read"]
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "hubspot_token": [
                "crm.objects.deals.read"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "amount": "1500.00",
              "closedate": "2019-12-07T16:50:06.678Z",
              "createdate": "2019-10-30T03:30:17.883Z",
              "dealname": "Custom data integrations",
              "dealstage": "presentationscheduled",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hubspot_owner_id": "910901",
              "pipeline": "default"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "SimplePublicObjectInput": {
          "required": [
            "properties"
          ],
          "type": "object",
          "properties": {
            "objectWriteTraceId": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            }
          },
          "example": {
            "properties": {
              "amount": "1500.00",
              "dealname": "Custom data integrations",
              "pipeline": "default",
              "closedate": "2019-12-07T16:50:06.678Z",
              "dealstage": "presentationscheduled",
              "hubspot_owner_id": "910901"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "amount": "1500.00",
              "closedate": "2019-12-07T16:50:06.678Z",
              "createdate": "2019-10-30T03:30:17.883Z",
              "dealname": "Custom data integrations",
              "dealstage": "presentationscheduled",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hubspot_owner_id": "910901",
              "pipeline": "default"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations",
            "properties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "objectWriteTraceId": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "example": {
            "properties": {
              "amount": "1500.00",
              "dealname": "Custom data integrations",
              "pipeline": "default",
              "closedate": "2019-12-07T16:50:06.678Z",
              "dealstage": "presentationscheduled",
              "hubspot_owner_id": "910901"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "hubspot_token": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    }
  }