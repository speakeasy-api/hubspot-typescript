/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  NextPage,
  NextPage$inboundSchema,
  NextPage$Outbound,
  NextPage$outboundSchema,
} from "./nextpage.js";
import {
  PreviousPage,
  PreviousPage$inboundSchema,
  PreviousPage$Outbound,
  PreviousPage$outboundSchema,
} from "./previouspage.js";

export type Paging = {
  next?: NextPage | undefined;
  prev?: PreviousPage | undefined;
};

/** @internal */
export const Paging$inboundSchema: z.ZodType<Paging, z.ZodTypeDef, unknown> = z
  .object({
    next: NextPage$inboundSchema.optional(),
    prev: PreviousPage$inboundSchema.optional(),
  });

/** @internal */
export type Paging$Outbound = {
  next?: NextPage$Outbound | undefined;
  prev?: PreviousPage$Outbound | undefined;
};

/** @internal */
export const Paging$outboundSchema: z.ZodType<
  Paging$Outbound,
  z.ZodTypeDef,
  Paging
> = z.object({
  next: NextPage$outboundSchema.optional(),
  prev: PreviousPage$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Paging$ {
  /** @deprecated use `Paging$inboundSchema` instead. */
  export const inboundSchema = Paging$inboundSchema;
  /** @deprecated use `Paging$outboundSchema` instead. */
  export const outboundSchema = Paging$outboundSchema;
  /** @deprecated use `Paging$Outbound` instead. */
  export type Outbound = Paging$Outbound;
}

export function pagingToJSON(paging: Paging): string {
  return JSON.stringify(Paging$outboundSchema.parse(paging));
}

export function pagingFromJSON(
  jsonString: string,
): SafeParseResult<Paging, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Paging$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Paging' from JSON`,
  );
}
