/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssociatedId,
  AssociatedId$inboundSchema,
  AssociatedId$Outbound,
  AssociatedId$outboundSchema,
} from "./associatedid.js";
import {
  Paging,
  Paging$inboundSchema,
  Paging$Outbound,
  Paging$outboundSchema,
} from "./paging.js";

export type CollectionResponseAssociatedId = {
  paging?: Paging | undefined;
  results: Array<AssociatedId>;
};

/** @internal */
export const CollectionResponseAssociatedId$inboundSchema: z.ZodType<
  CollectionResponseAssociatedId,
  z.ZodTypeDef,
  unknown
> = z.object({
  paging: Paging$inboundSchema.optional(),
  results: z.array(AssociatedId$inboundSchema),
});

/** @internal */
export type CollectionResponseAssociatedId$Outbound = {
  paging?: Paging$Outbound | undefined;
  results: Array<AssociatedId$Outbound>;
};

/** @internal */
export const CollectionResponseAssociatedId$outboundSchema: z.ZodType<
  CollectionResponseAssociatedId$Outbound,
  z.ZodTypeDef,
  CollectionResponseAssociatedId
> = z.object({
  paging: Paging$outboundSchema.optional(),
  results: z.array(AssociatedId$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollectionResponseAssociatedId$ {
  /** @deprecated use `CollectionResponseAssociatedId$inboundSchema` instead. */
  export const inboundSchema = CollectionResponseAssociatedId$inboundSchema;
  /** @deprecated use `CollectionResponseAssociatedId$outboundSchema` instead. */
  export const outboundSchema = CollectionResponseAssociatedId$outboundSchema;
  /** @deprecated use `CollectionResponseAssociatedId$Outbound` instead. */
  export type Outbound = CollectionResponseAssociatedId$Outbound;
}

export function collectionResponseAssociatedIdToJSON(
  collectionResponseAssociatedId: CollectionResponseAssociatedId,
): string {
  return JSON.stringify(
    CollectionResponseAssociatedId$outboundSchema.parse(
      collectionResponseAssociatedId,
    ),
  );
}

export function collectionResponseAssociatedIdFromJSON(
  jsonString: string,
): SafeParseResult<CollectionResponseAssociatedId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CollectionResponseAssociatedId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CollectionResponseAssociatedId' from JSON`,
  );
}
