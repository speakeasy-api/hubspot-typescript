/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ForwardPaging,
  ForwardPaging$inboundSchema,
  ForwardPaging$Outbound,
  ForwardPaging$outboundSchema,
} from "./forwardpaging.js";
import {
  SimplePublicObject,
  SimplePublicObject$inboundSchema,
  SimplePublicObject$Outbound,
  SimplePublicObject$outboundSchema,
} from "./simplepublicobject.js";

export type CollectionResponseWithTotalSimplePublicObjectForwardPaging = {
  total: number;
  paging?: ForwardPaging | undefined;
  results: Array<SimplePublicObject>;
};

/** @internal */
export const CollectionResponseWithTotalSimplePublicObjectForwardPaging$inboundSchema:
  z.ZodType<
    CollectionResponseWithTotalSimplePublicObjectForwardPaging,
    z.ZodTypeDef,
    unknown
  > = z.object({
    total: z.number().int(),
    paging: ForwardPaging$inboundSchema.optional(),
    results: z.array(SimplePublicObject$inboundSchema),
  });

/** @internal */
export type CollectionResponseWithTotalSimplePublicObjectForwardPaging$Outbound =
  {
    total: number;
    paging?: ForwardPaging$Outbound | undefined;
    results: Array<SimplePublicObject$Outbound>;
  };

/** @internal */
export const CollectionResponseWithTotalSimplePublicObjectForwardPaging$outboundSchema:
  z.ZodType<
    CollectionResponseWithTotalSimplePublicObjectForwardPaging$Outbound,
    z.ZodTypeDef,
    CollectionResponseWithTotalSimplePublicObjectForwardPaging
  > = z.object({
    total: z.number().int(),
    paging: ForwardPaging$outboundSchema.optional(),
    results: z.array(SimplePublicObject$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollectionResponseWithTotalSimplePublicObjectForwardPaging$ {
  /** @deprecated use `CollectionResponseWithTotalSimplePublicObjectForwardPaging$inboundSchema` instead. */
  export const inboundSchema =
    CollectionResponseWithTotalSimplePublicObjectForwardPaging$inboundSchema;
  /** @deprecated use `CollectionResponseWithTotalSimplePublicObjectForwardPaging$outboundSchema` instead. */
  export const outboundSchema =
    CollectionResponseWithTotalSimplePublicObjectForwardPaging$outboundSchema;
  /** @deprecated use `CollectionResponseWithTotalSimplePublicObjectForwardPaging$Outbound` instead. */
  export type Outbound =
    CollectionResponseWithTotalSimplePublicObjectForwardPaging$Outbound;
}

export function collectionResponseWithTotalSimplePublicObjectForwardPagingToJSON(
  collectionResponseWithTotalSimplePublicObjectForwardPaging:
    CollectionResponseWithTotalSimplePublicObjectForwardPaging,
): string {
  return JSON.stringify(
    CollectionResponseWithTotalSimplePublicObjectForwardPaging$outboundSchema
      .parse(collectionResponseWithTotalSimplePublicObjectForwardPaging),
  );
}

export function collectionResponseWithTotalSimplePublicObjectForwardPagingFromJSON(
  jsonString: string,
): SafeParseResult<
  CollectionResponseWithTotalSimplePublicObjectForwardPaging,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CollectionResponseWithTotalSimplePublicObjectForwardPaging$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CollectionResponseWithTotalSimplePublicObjectForwardPaging' from JSON`,
  );
}
